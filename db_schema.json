{
    "user": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2013-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2013-06-13 15:30:00 -0700",
        "email": "{String}",
        "password": "{String} [hashed password]",
        "firstName": "{String}",
        "lastName": "{String}",
        "sessionIds": [
            "{String} [string of one of current session ids] 3l4klaskj3"
        ],
        "passwordResetKey":"{String} [string of random string to allow resetting password] lk3jlkja",
        "status": "{String} ['guest' until email verified, 'member'] member",
        "roles": [
            "{String} [one of '', 'admin']"
        ],
        "emailVerificationKey": "{String}",
        "emailVerified": "{Int} 1 or 0",
        "username": "{String}",
        "location": {
            "type": "Point [https://stackoverflow.com/questions/25734092/query-locations-within-a-radius-in-mongodb]",
            "coordinates": ["{Float} [lng]", "{Float} [lat]"]
        }
    },
    "image": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2013-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2013-06-13 15:30:00 -0700",
        "url": "{String}",
        "title": "{String}",
        "userIdCreator": "{String}"
    },
    "blog": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "title": "{String}",
        "slug": "{String} [auto-generated from title]",
        "text": "{String}",
        "userIdCreator": "{String}",
        "tags": [
            "{String}"
        ],
        "imageUrl": "{String}",
        "imageCredit": "{String}"
    },
    "weeklyEvent": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "hostUserIds": [ "{String} [Only applies to free, non hosted events, otherwise the hosts will sign up each event]" ],
        "hostGroupSizeDefault": "{Int} [People per each host. This will also be used to calculate credits per event type.]",
        "hostMoneyPerPersonUSD": "{Float}",
        "priceUSD": "{Float} [0 if free. This is the single event price, which will be discounted for monthly and yearly subscriptions.]",
        "imageUrls": [ "{String}" ],
        "title": "{String}",
        "description": "{String}",
        "dayOfWeek": "{Int} [0-6, 0 = mon, 1 = tue, 2 = wed, 3 = thu, 4 = fri, 5 = sat, 6 = sun]",
        "startTime": "{String} [HH:mm]",
        "endTime": "{String} [HH:mm]",
        "location": {
            "type": "Point",
            "coordinates": ["{Float} [lng]", "{Float} [lat]"]
        },
        "rsvpDeadlineHours": "{Int} [How many hours before event to allow rsvp, otherwise the sign up is for NEXT week]"
    },
    "event": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "weeklyEventId": "{String} [A new event is generated each week and sign ups for the weeklyEvent are stored here]",
        "start": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ]"
    },
    "userEvent": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "eventId": "{String}",
        "userId": "{String}",
        "hostGroupSizeMax": "{Int} [0 if NOT hosting, 1+ if willing to host]",
        "hostGroupSize": "{Int} [The final host group size]",
        "guestCountAsk": "{Int} [0 or 1+ if bringing guests]",
        "guestCount": "{Int} [The final guest count, in case not enough hosts for all]",
        "creditsChange": "{Float} [positive if added (e.g. if host, which could be fractional credits if get 1 credit for every 10 people and hosted 5), negative if redeemed]",
        "creditsPriceUSD": "{Float} [the price copied from the weeklyEvent.priceUSD to compute remaining credits per event type (price)"
    },
    "userWeeklyEvent": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "weeklyEventId": "{String}",
        "userId": "{String}",
        "hostGroupSizeMax": "{Int} [0 if NOT hosting, 1+ if willing to host]",
        "hostFrequency": "{Float} [1 for planning to host every event, 0.5 if plan to host half the events, etc. This times hostGroupSizeMax gives estimated people this user can host.]",
        "guestCountAsk": "{Int} [0 or 1+ if bringing guests]",
        "creditsChange": "{Float} [positive if added (e.g. if host, which could be fractional credits if get 1 credit for every 10 people and hosted 5), negative if redeemed]",
        "creditsPriceUSD": "{Float} [the price copied from the weeklyEvent.priceUSD to compute remaining credits per event type (price)"
    },
    "sharedItem": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "title": "{String}",
        "description": "{String}",
        "imageUrls": [ "{String}" ],
        "currentOwnerUserId": "{String}",
        "currentPurchaserUserId": "{String}",
        "tags": [
            "{String}"
        ],
        "location": {
            "type": "Point [https://stackoverflow.com/questions/25734092/query-locations-within-a-radius-in-mongodb]",
            "coordinates": ["{Float} [lng]", "{Float} [lat]"]
        },
        "bought": "{Int} 1|0 [1 if already owned, and thus no funding required]",
        "originalPrice": "{Float}",
        "currentPrice": "{Float}",
        "currency": "{String}",
        "generation": "{Int} [0 before first ownership / purchase, 1+ after]",
        "currentGenerationStart": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "monthsToPayBack": "{Int}",
        "maintenancePerYear": "{Float}",
        "maintenanceAvailable": "{Float} [unspent maintenance savings that can be used]",
        "minOwners": "{Int}",
        "maxOwners": "{Int}",
        "maxMeters": "{Float} [how far away other owners can be]",
        "status": "{String} available|purchasing|owned [Only available items show up to add new owners to a future generation (be co-purchased and co-owned)]",
        "pledgedOwners": "{Int} [cached for search: number of owners who have pledged from sharedItemOwner (in future generation)]",
        "fundingRequired": "{Float} [cached for search: currentPrice - (totalPaid of all pledged owners (in future generation))]"
    },
    "sharedItemOwner": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "sharedItemId": "{String}",
        "userId": "{String}",
        "generation": "{Int} [If above sharedItem.generation, numbers are pledges to start the next generation of owners]",
        "monthlyPayment": "{Float} [Negative if this user is owed each month. Pledge if future generation.]",
        "totalPaid": "{Float} [Investor pledge or down payment if future generation. This will be incremented when the user pays until it equals totalOwed]",
        "totalOwed": "{Float} [amount this user owes; negative if this user is owed money]",
        "totalPaidBack": "{Float} [amount this user has been paid back; this will be incremented until it equals -1 * totalOwed]",
        "investorOnly": "{Int} [1 if this owner pays only (is NOT a shared owner), 0 otherwise]",
        "status": "{String} pendingMonthlyPayment|paying|paid",
        "stripeMonthlyPriceId": "{String} [used for stopping recurring monthly payment when done]"
    },
    "TODOsharedItemMaintenance": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "sharedItemId": "{String}",
        "userId": "{String}",
        "requestedAmount": "{Float}",
        "paidAmount": "{Float}",
        "approvalUserIds": [ "{String}" ],
        "rejectionUserIds": [ "{String}" ],
        "status": "{String} open|approved|rejected"
    },
    "userMoney": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "userId": "{String}",
        "balanceUSD": "{Float}"
    },
    "userPayment": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "userId": "{String}",
        "amountUSD": "{Float} [positive if increases this user's balance (e.g. deposit or payment TO this user), negative if reduces this user's balance (e.g. withdrawal or payment FROM this user)]",
        "feeUSD": "{Float}",
        "forType": "{String} [user|sharedItemOwner|event]",
        "forId": "{String} [userId|sharedItemOwnerId|eventId]",
        "status": "{String} pending|complete",
        "notes": "{String}"
    },
    "userPaymentSubscription": {
        "_id": "{ObjectId} ObjectId('123l4k234l')",
        "createdAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "updatedAt": "{String} [timestamp YYYY-MM-DD HH:mm:ss ZZ] 2023-06-13 15:30:00 -0700",
        "userId": "{String}",
        "amountUSD": "{Float}",
        "forType": "{String} [user|sharedItemOwner|weeklyEvent]",
        "forId": "{String} [userId|sharedItemOwnerId|weeklyEventId]",
        "status": "{String} pending|complete",
        "stripeId": "{String}"
    }

}