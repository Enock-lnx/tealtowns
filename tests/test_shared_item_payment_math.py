from shared_item import shared_item_payment_math as _shared_item_payment_math

# def test_shared_item_max_current_price():
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 0) == 1000)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 1) == 1000)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 2) == 500)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 3) == 250)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 4) == 125)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 5) == 100)
#     assert(_shared_item_payment_math.MaxCurrentPrice(1000, 6) == 100)
#     assert(_shared_item_payment_math.MaxCurrentPrice(300000, 6) == 10000)

def test_shared_item_get_payments():
    payments = _shared_item_payment_math.GetPayments(1000, 1*12, 10, 50)
    assert(payments['downPerPerson'] == 100)
    assert(payments['downPerPersonWithFee'] == 106)
    assert(payments['monthlyPayment'] == 10)
    assert(payments['monthlyPaymentWithFee'] == 13)
    assert(payments['monthsToPayBack'] == 1)
    payments = _shared_item_payment_math.GetPayments(5000, 1*12, 20, 100)
    assert(payments['downPerPerson'] == 100)
    assert(payments['downPerPersonWithFee'] == 106)
    assert(payments['monthlyPayment'] == 15)
    assert(payments['monthlyPaymentWithFee'] == 18)
    assert(payments['monthsToPayBack'] == 1*12)
    payments = _shared_item_payment_math.GetPayments(10000, 1*12, 100, 500)
    assert(payments['downPerPerson'] == 100)
    assert(payments['downPerPersonWithFee'] == 106)
    assert(payments['monthlyPayment'] == 10)
    assert(payments['monthlyPaymentWithFee'] == 13)
    assert(payments['monthsToPayBack'] == 1)
    payments = _shared_item_payment_math.GetPayments(25000, 2*12, 5, 500)
    assert(payments['downPerPerson'] == 1500)
    assert(payments['downPerPersonWithFee'] == 1571)
    assert(payments['monthlyPayment'] == 196)
    assert(payments['monthlyPaymentWithFee'] == 207)
    assert(payments['monthsToPayBack'] == 2*12)
    payments = _shared_item_payment_math.GetPayments(50000, 3*12, 10, 1000)
    assert(payments['downPerPerson'] == 2145)
    assert(payments['downPerPersonWithFee'] == 2247)
    assert(payments['monthlyPayment'] == 130)
    assert(payments['monthlyPaymentWithFee'] == 138)
    assert(payments['monthsToPayBack'] == 3*12)
    payments = _shared_item_payment_math.GetPayments(50000, 5*12, 1, 1000)
    assert(payments['downPerPerson'] == 3750)
    assert(payments['downPerPersonWithFee'] == 3927)
    assert(payments['monthlyPayment'] == 1271)
    assert(payments['monthlyPaymentWithFee'] == 1332)
    assert(payments['monthsToPayBack'] == 5*12)
    payments = _shared_item_payment_math.GetPayments(100000, 5*12, 1, 2000)
    assert(payments['downPerPerson'] == 7500)
    assert(payments['downPerPersonWithFee'] == 7853)
    assert(payments['monthlyPayment'] == 2542)
    assert(payments['monthlyPaymentWithFee'] == 2663)
    assert(payments['monthsToPayBack'] == 5*12)
    payments = _shared_item_payment_math.GetPayments(300000, 5*12, 2, 6000)
    assert(payments['downPerPerson'] == 10000)
    assert(payments['downPerPersonWithFee'] == 10471)
    assert(payments['monthlyPayment'] == 3834)
    assert(payments['monthlyPaymentWithFee'] == 4015)
    assert(payments['monthsToPayBack'] == 5*12)
    payments = _shared_item_payment_math.GetPayments(700000, 12*12, 1, 14000)
    assert(payments['downPerPerson'] == 11862)
    assert(payments['downPerPersonWithFee'] == 12420)
    assert(payments['monthlyPayment'] == 11779)
    assert(payments['monthlyPaymentWithFee'] == 12333)
    assert(payments['monthsToPayBack'] == 12*12)

    payments = _shared_item_payment_math.GetPayments(500, 1*12, 10, 50)
    assert(payments['downPerPerson'] == 55)
    assert(payments['downPerPersonWithFee'] == 60)
    assert(payments['monthlyPayment'] == 0)
    assert(payments['monthlyPaymentWithFee'] == 0)
    assert(payments['monthsToPayBack'] == 0)

def test_add_remove_fee():
    assert(_shared_item_payment_math.AddFee(100, withPayFee = False) == 101)
    assert(_shared_item_payment_math.AddFee(100, withCut = False) == 105)
    assert(_shared_item_payment_math.AddFee(100) == 106)
    assert(_shared_item_payment_math.RemoveFee(106) == 100)
    assert(_shared_item_payment_math.RemoveFee(105, withPayFee = False) == 104)
    assert(_shared_item_payment_math.RemoveFee(106, withCut = False) == 101)
    assert(_shared_item_payment_math.AddFee(1000) == 1048)
