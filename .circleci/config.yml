version: 2.1
parameters:
  run:
    default: true
    type: boolean
  flutter-dir:
    default: ./frontend
    type: string
  flutter-cache-version:
    default: v1
    type: string
  flutter-docker-image:
    default: ghcr.io/cirruslabs/flutter:3.19.1
    type: string
orbs:
  python: circleci/python@2.1.1
  flutter: circleci/flutter@2.0.2
jobs:
  test_python:
    executor:
      name: python/default
      tag: '3.12'
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: cp config.sample.yml config.yml && MAPBOX_TOKEN=$MAPBOX_TOKEN python -m pytest
  test_flutter:
    docker:
      - image: <<pipeline.parameters.flutter-docker-image>>
    steps:
      - checkout
      - restore_cache:
          keys:
              - pub-<<pipeline.parameters.flutter-cache-version>>-{{ checksum "<< pipeline.parameters.flutter-dir >>/pubspec.lock" }}-{{ arch }}
      - run:
          name: Run Flutter Tests
          command: cp .sample-env .env && flutter pub get && flutter test
          working_directory: <<pipeline.parameters.flutter-dir>>
      - save_cache:
          key: pub-<<pipeline.parameters.flutter-cache-version>>-{{ checksum "<< pipeline.parameters.flutter-dir >>/pubspec.lock" }}-{{ arch }}
          paths:
              - <<pipeline.parameters.flutter-dir>>/.dart_tool
  deploy_prod:
    executor:
      name: python/default
      tag: '3.12'
    steps:
      - checkout
      - run:
          name: Deploy
          command: ssh -oStrictHostKeyChecking=no root@tealtowns.org 'cd /var/www/tealtowns && git checkout . && git pull origin main && pip3 install -r ./requirements.txt && flutter upgrade && cd frontend && flutter build web && systemctl restart systemd_web_server_tealtowns.service'
workflows:
  test_app:
    when: << pipeline.parameters.run >>
    jobs:
      - test_python:
          filters:
            branches:
              ignore: main
      - test_flutter:
          filters:
            branches:
              ignore: main
  deploy_app:
    jobs:
      - test_python:
          filters:
            branches:
              only: main
      - test_flutter:
          filters:
            branches:
              only: main
      - deploy_prod:
          requires:
            - test_python
            - test_flutter
          filters:
            branches:
              only: main
