name: Test
on:
  push:
    branches-ignore: [main]
  workflow_call:

jobs:
  test-flutter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - uses: subosito/flutter-action@v2
        with:
          # flutter-version: '3.19.3'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: cd ./frontend && flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      # - name: Analyze project source
      #   run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        # run: flutter test
        run: cd ./frontend && cp .sample-env .env && flutter test

  test-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install flake8 pytest
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -r requirements.txt
      - name: Test with pytest
        env:
          MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
        run: |
          cp config.sample.yml config.yml && MAPBOX_TOKEN=$MAPBOX_TOKEN python -m pytest
